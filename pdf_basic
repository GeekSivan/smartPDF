PDF Basic  From Document management  — Portable document format — Part 1: PDF 1.7 (use tool node++ to view file bytes).
--------------------------------------------------
1 Syntax
This clause covers everthing about the syntax of PDF at the objects, file, and document level.
PDF syntax contains 4 parts:
1) Objects: A PDF document is a data structure composed from a small set of basic types of data objects.
2) File Structure. The PDF file structure determines how objects are stored in a PDF file, how they are accessed, and how they are updated. It is independent of semantics of the objects.
3) Document structure: The PDF Document Structure specifies how the basic objects types are used to represent components of a PDF document: pages, fonts, annotations, and so forth.
4) Content Streams. A PDF content stream contains a sequence of instructions describing the appearance of a page or other graphical entity.
--------------------------------------------------
1.1 Character Set
   The PDF character set is divided into three classes, called re gular,  delimiter , and  white-space characters.  
--------------------------------------------------
1.2 Objects
   PDF includes eight basic types of objects: Boolean values, Integer and Real numbers, Strings, Names, Arrays, Dictionaries, Streams, and the null object.
--------------------------------------------------
1.3 Steam Filters
   An option when reading stream data is to decode it using a filter to produce the original non-encoded data. Whether to do so and which decoding filter or filters to use may be specified in the stream dictionary.
PDF supports a standard set of filters  that fall into two main categories: ASCII filters   and Decompression filters.
ASCIIHexDecode/ASCII85Decode/LZWDecode/FlateDecode/RunLengthDecode/CCITTFaxDecode/JBIG2Decode/DCTDecode/JPXDecode/Crypt
Every Decode Filter has exactly decode asthmatics.
--------------------------------------------------
File Structure (Tip: The Sequence of bytes is not same as the logic of document structure)
 A basic conforming PDF file shall be constructed of following four elements:
 *  Header: A one-line header identifying the version of the PDF specification to which the file conforms.
 *  Body: A body containing the objects that make up the document contained in the file.
 *  CR Table: A cross-reference table containing information about the indirect objects in the file.
 *  Trailer: A trailer giving the location of the cross-reference table and certain special objects within the body of file.
+_______________________+
+       Header          +
+_______________________+
+                       +
+         Body          +
+_______________________+
+    Cross Ref Table    +
+_______________________+
+        Trailer        +
+_______________________+

As a matter of convention, the tokens in a PDF file are arranged into lines (EOL) or LINE FEED (0Ah).
   File Header %PDF–1.4
   The cross-reference table  contains information that permits random access to indirect objects within the file so 
that the entire file need not be read to locate any particular object. 
   CR table format is
   "nnnnnnnnnn nnnnnnnnnn  eol"
   "nnnnnnnnnn   ggggg   f   eol"
   Example:
   xref  
   0  1 
   0000000000  65535   f  
   3  1 
   0000025325  00000   n 
   23  2 
   0000025518  00002   n 
   0000025635  00000   n 
   30  1 
   0000025777  00000   n

   The example shows a cross-reference section  with 4 subsections:
      The 1st  contains one entry, for object number 0, which is free. 
      The second subsection contains one entry, for object number 3, which is in use. 
      The third subsection contains two entries, for objects number 23 and 24, both of which are in use. 
      The fourth subsection cont ains one entry, for object number 30, which is in use.  
    CR 0  1 :  "0" is the section number. "1" is the object count.
       0000000000  65535   f:  "0000000000" is "byte offset in the decoded stream" 65535" is generation number . n/f is now in use and free to delete. 
--------------------------------------------------     
       image.pdf's 
      xref
      0 9
      0000000000 65535 f
      0000000016 00000 n
      0000000208 00000 n
      0000015573 00000 n
      0000030404 00000 n
      0000030586 00000 n
      0000030637 00000 n
      0000030697 00000 n
      0000030907 00000 n
--------------------------------------------------
File Trailer
The trailer  of a PDF file enables a conforming reader to quickly find the cross-reference table and certain special objects. 
   Example:
   trailer
   <</Size 9/Root 6 0 R/Info 7 0 R/ID[<CBF9C0B82001B8E2F3B2C7B10ECE7F89><CBF9C0B82001B8E2F3B2C7B10ECE7F89>]>>
   startxref
   31967
   %%EOF
   
   
   The trailer  of a PDF file enables a conforming reader to quickly find the cross-reference table and certain 
special objects. Conforming readers should read a PDF file  from its end. 
   From Endline to front:
   1. End-of-file marker,  %%EOF. 
   2. two preceding lines between xref and startxref.
   3. Body of xref and startxref use double angle brackets (<< … >>) to store dictionary: key:value.
   
This example shows a trailer  for a file that has neve r been updated (as indicated  by the absence of a Prev entry in the trailer dictionary.
2 Document Structure
A  PDF document can be regarded as hierarchy of objects contained in the body section of a PDF file. At the root of the hierarchy is the document's catalog dictionary.
The data structures is composed of Catalog and Page dictionaries, combine entries describing document structure with ones dealing with detailed semantics of documents and pages

2.1 Document Catalog (Catalog=Dir)
The catalog  dictionary, located by means of the Root entry in the trailer of the PDF file. The catalog contains references to other objects defining the document’s contents, outline, article threads, named destinations, and other attributes. In addition, it contains disply controlling information
Tree：
Doc+----Pages
                  +----Page 1# 
                            +Content Stream
                            +Thumbnail image
                            +Annotation
                   +----Page 2# 
      +----Outline Hierarchy
                   +----outline entry 1#
                   +----outline entry 2#
      +----Article threads
                   +----Thread 1#
                   +----Thread  2#
      +----Named Destinations
      +----Interactive form
     8 Graphics
     
     The graphics operators used in PDF content stream s describe the appearance of pages that are to be 
reproduced on a raster  output device. The fa cilities described in this clause  are intended for both printer and 
display applications. 

The graphics operators form six main groups: 

• Graphics state operators
• Path construction operators
• Path-painting operators 
• Other painting operators
• Text operators
• Marked-content

8.2 Graphics Objects
The operands and operators 

PDF provides five types of graphics objects:
•A path object is an arbitrary shape made up of straight lines, rectangles, and cubic Bézier curves.
•A te xt object  consists of one or more character strings that  identify sequences of gly phs to be painted. 
*An external object (XObject)  is an object defined outside the content stream and referenced as a named 
* An in line image object  uses a special syntax to express the  data for a small image directly within the 
content streamresource
* A shading object describes a geometric shape whose colour is  an arbitrary function of position within the shape.
